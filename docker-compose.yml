networks:
  ns-rt-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24

services:
  sionna:
    build:
      context: .
      dockerfile: Dockerfile.sionna
    volumes:
      - ./src/sionna/scenarios/SionnaExampleScenario:/sionna/scenarios/SionnaExampleScenario
    networks:
      ns-rt-network:
        ipv4_address: 192.168.1.100
    container_name: sionna-container
    healthcheck:
      test: ["CMD", "python3", "-c", "import http.client; conn = http.client.HTTPConnection('127.0.0.1', 8102); conn.request('GET', '/health'); res = conn.getresponse(); exit(0) if res.status == 200 else exit(1)"]
      interval: 10s
      timeout: 100s
      retries: 10
      start_period: 10s

  ns3:
    build:
      context: .
      dockerfile: Dockerfile.ns3
    depends_on:
      sionna:
        condition: service_healthy
    environment:
      - NS3_EXAMPLE=simple-sionna-example
      - SIONNA_IP=192.168.1.100
    volumes:
      - ./src/sionna/examples:/ns3-rt/src/sionna/examples
    networks:
      ns-rt-network:
        ipv4_address: 192.168.1.101
    container_name: ns3-container